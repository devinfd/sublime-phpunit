{
    // Enable Artisan test runner. See https://laravel.com.
    "phpunit.artisan": false,

    // Use Composer installed executables if they exist.
    "phpunit.composer": true,

    // Prints extra verbose messages about environment.
    "phpunit.debug": false,

    // The path to the PHPUnit executable to use when running tests. Environment
    // variables and user home directory ~ placeholder are expanded. The
    // executable can be a string or a list of parameters.
    // Default: Auto discovery.
    // Example: vendor/bin/phpunit
    "phpunit.executable": null,

    // Font size of PHPUnit output.
    "phpunit.font_size": null,

    // Commands to run when a file is saved.
    // Example: ["phpunit_test_file"]
    "phpunit.on_post_save": [],

    // Command-line options to pass to PHPUnit.
    // https://phpunit.de/manual/current/en/textui.html#textui.clioptions
    // e.g. `{"no-coverage": true, "verbose": true, "colors=never": true}`
    "phpunit.options": {},

    // Enable Paratest test runner. See https://github.com/paratestphp/paratest.
    "phpunit.paratest": false,

    // Enable Pest test runner. See https://pestphp.com.
    "phpunit.pest": false,

    // The path to the PHP executable to use when running tests. Environment
    // variables and user home directory ~ placeholder are expanded.
    // Default: Auto discovery.
    // Example: ~/.phpenv/versions/8.2/bin/php
    "phpunit.php_executable": null,

    // Path to find php versions. The expected location of the PHP executables
    // is {php_versions_path}/{version}/bin/php. Specify the version to use by
    // creating a file named .php-version, with the version as its contents,
    // and place it in the root of the project (where the project phpunit.xml
    // configuration file is located).
    "phpunit.php_versions_path": "~/.phpenv/versions",

    // Prepends test runner command.
    "phpunit.prepend_cmd": [],

    // Save all dirty buffers before running tests.
    "phpunit.save_all_on_run": true,

    // Choose the desired execution environment for running tests.
    // Options include:
    // - sublime
    // - iterm
    // - kitty
    // - xterm
    // - cmd
    // - powershell
    "phpunit.strategy": "sublime",

    // Enable SSH.
    "phpunit.ssh": false,

    // The options to use when running tests via SSH.
    // Example: {"-p": "22", "-tt": true}
    "phpunit.ssh_options": {},

    // The user to use when running tests via SSH.
    // Example: vagrant
    "phpunit.ssh_user": null,

    // The host to use when running tests via SSH.
    // Example: homestead.test
    "phpunit.ssh_host": null,

    // The path map to use when running tests via SSH. The keys are local paths
    // and the values are the replacement remote paths. Environment variables
    // and user home directory ~ placeholder are expanded.
    // Example: {"~/code/project1": "~/project1"}
    "phpunit.ssh_paths": {},

    // Enable Docker.
    "phpunit.docker": false,

    // The command to use when running tests via Docker.
    // Example: ["docker", "exec", "-it", "my-container"]
    "phpunit.docker_command": [],

    // The path map to use when running tests via Docker. The keys are local
    // paths and the values are the replacement remote paths. Environment
    // variables and user home directory ~ placeholder are expanded.
    // Example: {"~/code/project1": "~/project1"}
    "phpunit.docker_paths": {},

    // Clear the terminal screen before running tests.
    "phpunit.tmux_clear": true,

    // Clear the terminal's scrollback buffer using the extended "E3" capability.
    "phpunit.tmux_clear_scrollback": true,

    // Specify the session, window, and pane which should be used to run tests.
    //
    // Format: `{session}:{window}.{pane}`
    //
    // The default means the current pane.
    //
    // For example, ":{start}.{top}", would mean the current session,
    // lowest-numbered window, top pane.
    //
    // See http://man.openbsd.org/OpenBSD-current/man1/tmux.1#COMMANDS
    "phpunit.tmux_target": ":."
}
